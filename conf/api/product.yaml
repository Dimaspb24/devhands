openapi: 3.0.1
info:
  title: Product API
  description: Product API provides functionality for CRUD operations on Product and searching of products (with filtering, sorting and paging).
  version: 0.0.1
servers:
  - description: Product server
    url: http://localhost:8080
tags:
  - name: ProductCrudOperations
paths:
  /product-api/v0/products:

    get:
      tags:
        - ProductCrudOperations
      summary: Read products
      operationId: findProducts

      parameters:
        - $ref: '#/components/parameters/filter'
      responses:
        200:
          description: OK. Request has succeeded
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductResponse'
        404:
          description: Product by the specified title filter is not found
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'

    post:
      tags:
        - ProductCrudOperations
      summary: Creates Product
      operationId: createProduct
      requestBody:
        description: Post request model
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProductRequest'
        required: true
      responses:
        200:
          description: OK. Request has succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'

    put:
      tags:
        - ProductCrudOperations
      summary: Update product
      operationId: updateProduct
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProductRequest'
        required: true
      responses:
        200:
          description: OK. Request has succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'

  /product-api/v0/products/{productId}:
    get:
      tags:
        - ProductCrudOperations
      summary: Get product by productId.
      operationId: getProduct
      parameters:
        - $ref: '#/components/parameters/productId'
      responses:
        200:
          description: OK. Request has succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    delete:
      tags:
        - ProductCrudOperations
      summary: Delete product.
      operationId: deleteProduct
      parameters:
        - $ref: '#/components/parameters/productId'
      responses:
        204:
          description: No content
          content: {}
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'


components:
  schemas:

    ProductResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        title:
          type: string
          description: Serial number - 12 or 16 digit alphanumeric digit.
          example: "Tomato"
        description:
          type: string
          description: product description
          example: "Red"

    CreateProductRequest:
      type: object
      properties:
        title:
          type: string
          description: Serial number - 12 or 16 digit alphanumeric digit.
          example: "Tomato"
        description:
          type: string
          description: product description
          example: "Red"

    UpdateProductRequest:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        title:
          type: string
          description: Serial number - 12 or 16 digit alphanumeric digit.
          example: "Tomato"
        description:
          type: string
          description: product description
          example: "Red"

    ProblemDetails:
      type: object
      properties:
        type:
          type: string
          format: uri
        title:
          type: string
        status:
          type: integer
          format: int32
        detail:
          type: string
        instance:
          type: string
        embedded:
          $ref: '#/components/schemas/AppSpecificProblemDetail'

    AppSpecificProblemDetail:
      type: object
      properties:
        code:
          type: string
        reason:
          type: string
        message:
          type: string
        status:
          type: integer
          format: int32

  parameters:
    productId:
      name: productId
      in: path
      description: Product ID
      required: true
      schema:
        type: integer
        format: int64
      example: 1
    filter:
      name: filter
      in: query
      description: Title filter
      required: false
      schema:
        type: string
      example: "Tom"